
//                  (MANAS KHARE)-KIET

#include<bits/stdc++.h>
#define ll long long int
typedef unsigned long long ull;
typedef long double lld;
#define ff first
#define ss second
#define pb push_back
#define mod 1000000007
#define inf 1e9+8
using namespace std;
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#ifndef ONLINE_JUDGE                                                                                                              
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// class SGTree {
//     vector<int> seg;
// public:
//     SGTree(int n) {
//         seg.resize(4 * n + 1);
//     }

//     void build(int ind, int low, int high, int arr[]) {
//         if (low == high) {
//             seg[ind] = arr[low];
//             return;
//         }

//         int mid = (low + high) / 2;
//         build(2 * ind + 1, low, mid, arr);
//         build(2 * ind + 2, mid + 1, high, arr);
//         seg[ind] = min(seg[2 * ind + 1], seg[2 * ind + 2]);
//     }

//     int query(int ind, int low, int high, int l, int r) {
//         // no overlap
//         // l r low high or low high l r
//         if (r < low || high < l) return INT_MAX;

//         // complete overlap
//         // [l low high r]
//         if (low >= l && high <= r) return seg[ind];

//         int mid = (low + high) >> 1;
//         int left = query(2 * ind + 1, low, mid, l, r);
//         int right = query(2 * ind + 2, mid + 1, high, l, r);
//         return min(left, right);
//     }
//     void update(int ind, int low, int high, int i, int val) {
//         if (low == high) {
//             seg[ind] = val;
//             return;
//         }

//         int mid = (low + high) >> 1;
//         if (i <= mid) update(2 * ind + 1, low, mid, i, val);
//         else update(2 * ind + 2, mid + 1, high, i, val);
//         seg[ind] = min(seg[2 * ind + 1], seg[2 * ind + 2]);
//     }
// };
int is_prime(ll t){
    if(t == 1) return 0;
    if(t == 2) return 1;
 
    for(ll i = 2; i * i<=t; i++){
        if(t % i == 0){
            return 0;
        }
    }
    return 1;
} 
int lcm(ll a, ll b){
    return (a / __gcd(a, b)) * b;
}
int ispowerof2(ll n){
    if(n&(n-1)==0)
        return 1;
    else
        return 0;
}
bool sortbysec(pair<ll, ll> a, pair<ll, ll> b)
{
    if (a.ss == b.ss)
        return a.ff < b.ff;
    return a.ss < b.ss;
}
static bool cmp(pair<int,int>p1,pair<int,int>p2){
         return p1.first<p2.first;
}
void update(int ind,int low,int high,vector<int>&seg,int orr,int i,int val){
    if(low==high){
        seg[ind]=val;
        return;
    }
    int mid=(low+high)/2;
    if(i<=mid) update(2*ind+1,low,mid,seg,!orr,i,val);
    else update(2*ind+2,mid+1,high,seg,!orr,i,val);
    if(orr) seg[ind]=seg[2*ind+1] | seg[2*ind+2];
    else seg[ind]=seg[2*ind+1] ^ seg[2*ind+2];
}
void build(int ind,int low,int high,vector<int>&a,vector<int>&seg,int orr){
    if(low==high){
        seg[ind]=a[low];
        return;
    }
    int mid=(low+high)/2;
    build(2*ind+1,low,mid,a,seg,!orr);
    build(2*ind+2,mid+1,high,a,seg,!orr);
    if(orr) seg[ind]=seg[2*ind+1] | seg[2*ind+2];
    else seg[ind]=seg[2*ind+1] ^ seg[2*ind+2];
}
void Manas(){
    int n,q;
    cin>>n>>q;
    int g=pow(2,n);
    vector<int>a(pow(2,n));
    
    for(int i=0;i<g;i++)
        cin>>a[i];
    vector<int>seg(4*g);
    if(n%2==0) build(0,0,g-1,a,seg,0);
    else build(0,0,g-1,a,seg,1);
    //cout<<seg[0];
    while(q--){
        int i,val;
        cin>>i>>val;
        i--;
        if(n%2==0) update(0,0,g-1,seg,0,i,val);
        else
            update(0,0,g-1,seg,1,i,val);
        cout<<seg[0]<<endl;
    }


    

}
int main(){
    #ifndef ONLINE_JUDGE
    freopen("Error.txt", "w", stderr);
    #endif
    ios_base::sync_with_stdio(false);cin.tie(NULL);
    // ll t;
    // cin>>t;
    // while(t--){
        Manas(); 
    //}
    return 0;
}